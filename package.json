{
  "name": "js-tts-wrapper",
  "version": "0.1.3",
  "description": "A JavaScript/TypeScript library that provides a unified API for working with multiple cloud-based Text-to-Speech (TTS) services",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/willwade/js-tts-wrapper.git"
  },
  "author": "Will Wade <willwade@gmail.com>",
  "license": "MIT",
  "scripts": {
    "build": "tsc",
    "dev": "tsc --watch",
    "test": "jest",
    "test:env": "node load-env.js && jest",
    "test:tts": "node run-tts-tests.js",
    "test:azure": "node run-tts-tests.js azure",
    "test:elevenlabs": "node run-tts-tests.js elevenlabs",
    "test:google": "node run-tts-tests.js google",
    "test:polly": "node run-tts-tests.js polly",
    "test:openai": "node run-tts-tests.js openai",
    "test:playht": "node run-tts-tests.js playht",
    "test:sherpaonnx": "node run-tts-tests.js sherpaonnx",
    "test:sherpaonnx:mac": "node scripts/run-with-sherpaonnx.js run-tts-tests.js sherpaonnx",
    "example": "node examples/tts-example.js",
    "example:azure": "node examples/tts-example.js azure",
    "example:elevenlabs": "node examples/tts-example.js elevenlabs",
    "example:google": "node examples/tts-example.js google",
    "example:polly": "node examples/tts-example.js polly",
    "example:sherpaonnx": "node examples/tts-example.js sherpaonnx",
    "example:sherpaonnx:mac": "node scripts/run-with-sherpaonnx.js examples/tts-example.js sherpaonnx",
    "example:openai": "node examples/tts-example.js openai",
    "example:playht": "node examples/tts-example.js playht",
    "lint": "biome lint --log-level=error ./src/utils ./src/ssml ./src/markdown",
    "lint:fix": "biome lint --write ./src/utils ./src/ssml ./src/markdown",
    "format": "biome format --write ./src/utils ./src/ssml ./src/markdown",
    "check": "biome check --write ./src/utils ./src/ssml ./src/markdown",
    "fix:all": "node scripts/fix-lint.js",
    "clean": "rimraf dist",
    "prepublishOnly": "npm run clean && npm run build && node scripts/package.js",
    "prepare-package": "node scripts/package.js",
    "prepare": "husky",
    "pre-push": "npm run check",
    "install:openai": "npm install openai@^4.93.0",
    "install:google": "npm install @google-cloud/text-to-speech@^6.0.1",
    "install:azure": "npm install @azure/cognitiveservices-speechservices@^1.0.0 microsoft-cognitiveservices-speech-sdk@^1.43.1",
    "install:polly": "npm install @aws-sdk/client-polly@^3.782.0",
    "install:elevenlabs": "npm install node-fetch@^2.0.0",
    "install:playht": "npm install node-fetch@^2.0.0",
    "install:sherpaonnx": "npm install sherpa-onnx-node@^1.11.3 decompress@^4.2.1 decompress-bzip2@^4.0.0 decompress-tarbz2@^4.1.1 decompress-targz@^4.1.1 tar-stream@^3.1.7",
    "install:cloud": "npm run install:openai && npm run install:google && npm run install:azure && npm run install:polly",
    "install:all": "npm run install:cloud && npm run install:elevenlabs && npm run install:playht && npm run install:sherpaonnx"
  },
  "keywords": [
    "tts",
    "text-to-speech",
    "azure",
    "google",
    "polly",
    "elevenlabs",
    "ibm",
    "watson",
    "openai"
  ],
  "devDependencies": {
    "@biomejs/biome": "^1.9.4",
    "@rollup/plugin-commonjs": "^28.0.3",
    "@rollup/plugin-node-resolve": "^16.0.1",
    "@rollup/plugin-typescript": "^12.1.2",
    "@types/jest": "^29.5.14",
    "@types/node-fetch": "^2.6.12",
    "dotenv": "^16.4.7",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^15.5.0",
    "rimraf": "^6.0.1",
    "rollup": "^4.39.0",
    "ts-jest": "^29.3.1",
    "tslib": "^2.8.1",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "speechmarkdown-js": "^2.1.0"
  },
  "peerDependencies": {
    "@aws-sdk/client-polly": "^3.782.0",
    "@azure/cognitiveservices-speechservices": "^1.0.0",
    "@google-cloud/text-to-speech": "^6.0.1",
    "decompress": "^4.2.1",
    "decompress-bzip2": "^4.0.0",
    "decompress-tarbz2": "^4.1.1",
    "decompress-targz": "^4.1.1",
    "microsoft-cognitiveservices-speech-sdk": "^1.43.1",
    "node-fetch": "^2.0.0",
    "openai": "^4.93.0",
    "sherpa-onnx-node": "^1.11.3",
    "tar-stream": "^3.1.7"
  },
  "peerDependenciesMeta": {
    "@aws-sdk/client-polly": {
      "optional": true
    },
    "@azure/cognitiveservices-speechservices": {
      "optional": true
    },
    "@google-cloud/text-to-speech": {
      "optional": true
    },
    "decompress": {
      "optional": true
    },
    "decompress-bzip2": {
      "optional": true
    },
    "decompress-tarbz2": {
      "optional": true
    },
    "decompress-targz": {
      "optional": true
    },
    "microsoft-cognitiveservices-speech-sdk": {
      "optional": true
    },
    "node-fetch": {
      "optional": true
    },
    "openai": {
      "optional": true
    },
    "sherpa-onnx-node": {
      "optional": true
    },
    "tar-stream": {
      "optional": true
    }
  },
  "optionalDependencies": {
    "node-fetch": "^2.7.0"
  },
  "lint-staged": {
    "./src/utils/**/*.{js,ts}": [
      "biome lint --write",
      "biome format --write"
    ],
    "./src/ssml/**/*.{js,ts}": [
      "biome lint --write",
      "biome format --write"
    ],
    "./src/markdown/**/*.{js,ts}": [
      "biome lint --write",
      "biome format --write"
    ]
  }
}
